{"version":3,"sources":["components/SearchArea/SearchArea.js","images/logo.svg","utils/conf.js","components/Card/Card.js","components/CardsArea/CardsArea.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchArea","React","memo","handleSearchForm","airlinesFoundList","airlinesActiveList","useState","formValues","setFormValues","selectedAirlines","setSelectedAirlines","inputPriceFrom","setInputPriceFrom","inputPriceBefore","setInputPriceBefore","checkboxTransfer","setCheckboxTransfer","checkboxDirect","setCheckboxDirect","useEffect","handleChangeForm","e","name","target","value","className","onChange","type","id","htmlFor","placeholder","title","includes","arr","slice","splice","findIndex","item","concat","Object","keys","map","airline","disabled","config","Card","card","segments","flight","legs","length","segmentsBack","carrier","caption","airlineBack","departureDate","arrivalDate","departureDateBack","arrivalDateBack","departureCity","departureCityBack","departureAirport","departureAirportBack","departureAirportId","uid","departureAirportIdBack","arrivalCity","arrivalCityBack","arrivalAirport","arrivalAirportBack","arrivalAirportId","arrivalAirportIdBack","durationForvard","setDurationForvard","durationBack","setDurationBack","dateOfStart","setDateOfStart","dateOfFinish","setDateOfFinish","dateOfStartBack","setDateOfStartBack","dateOfFinishBack","setDateOfFinishBack","timeOfStart","setTimeOfStart","timeOfFinish","setTimeOfFinish","timeOfStartBack","setTimeOfStartBack","timeOfFinishBack","setTimeOfFinishBack","DateTime","fromISO","setLocale","toFormat","getReadableDuration","minutes","dur","Number","h","Math","floor","m","duration","src","logo","alt","price","total","amount","onClick","console","log","CardsArea","listForRender","message","sort","cardToRender","setCardToRender","buttonVisible","setButtonVisible","numbers","setNumbers","cardLeft","cardRight","flightToken","App","mainList","flightsList","setListForRender","setMessage","setSort","transferFlight","setTransferFlight","directFlight","setDirectFlight","priceFrom","setPriceFrom","priceBefore","setPriceBefore","setAirlinesFoundList","airlinesCheckedList","setAirlinesCheckedList","setAirlinesActiveList","listForCheckboxHandle","setListForCheckboxHandle","JSON","stringify","temporaryArray","filter","temporaryObject","reduce","obj","key","list","Set","intersection","x","has","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97dcf02c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SearchArea.css'\r\n\r\n\r\nconst SearchArea = React.memo(({ handleSearchForm, airlinesFoundList, airlinesActiveList }) => {\r\n\r\n  const [formValues, setFormValues] = React.useState({})\r\n  const [selectedAirlines, setSelectedAirlines] = React.useState([])\r\n  const [inputPriceFrom, setInputPriceFrom] = React.useState('')\r\n  const [inputPriceBefore, setInputPriceBefore] = React.useState('')\r\n  const [checkboxTransfer, setCheckboxTransfer] = React.useState(false)\r\n  const [checkboxDirect, setCheckboxDirect] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    handleSearchForm(formValues, selectedAirlines)\r\n  }, [handleSearchForm, selectedAirlines, formValues])\r\n\r\n\r\n  const handleChangeForm = (e) => {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    switch (name) {\r\n      case 'transferFlight':\r\n        setFormValues({ ...formValues, [name]: !checkboxTransfer })\r\n        setCheckboxTransfer(!checkboxTransfer)\r\n        break\r\n      case 'directFlight':\r\n        setFormValues({ ...formValues, [name]: !checkboxDirect })\r\n        setCheckboxDirect(!checkboxDirect)\r\n        break\r\n      case 'priceFrom':\r\n        setFormValues({ ...formValues, [name]: value })\r\n        setInputPriceFrom(value)\r\n        break\r\n      case 'priceBefore':\r\n        setFormValues({ ...formValues, [name]: value })\r\n        setInputPriceBefore(value)\r\n        break\r\n      default:\r\n        setFormValues({ ...formValues, [name]: value })\r\n    }\r\n  }\r\n\r\n\r\n  const handleChangeAirlinesCheckbox = (e) => {\r\n    const value = e.target.value\r\n    if (selectedAirlines.includes(value)) {\r\n      let arr = selectedAirlines.slice() // копия массива\r\n      arr.splice(selectedAirlines.findIndex(item => item === value), 1) // удаление отмеченной а/к\r\n      setSelectedAirlines(arr) // перезапись массива\r\n    } else {\r\n      setSelectedAirlines(selectedAirlines.concat(value))\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <section className=\"search-area\">\r\n      <form className=\"form\">\r\n\r\n        <fieldset className=\"form__set form__sort\" onChange={handleChangeForm}>\r\n          <h3 className=\"form__subtitle\">Сортировать</h3>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"priceUp\"\r\n            name=\"sort\"\r\n            value=\"priceUp\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"priceUp\">- по возрастанию цены</label><br />\r\n          <input\r\n            type=\"radio\"\r\n            id=\"priceDown\"\r\n            name=\"sort\"\r\n            value=\"priceDown\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"priceDown\">- по убыванию цены</label><br />\r\n          <input\r\n            type=\"radio\"\r\n            id=\"duration\"\r\n            name=\"sort\"\r\n            value=\"duration\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"duration\">- по времени в пути</label>\r\n        </fieldset>\r\n\r\n\r\n        <fieldset className=\"form__set form__filter\" onChange={handleChangeForm}>\r\n          <h3 className=\"form__subtitle\">Фильтровать</h3>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"transferFlight\"\r\n            name=\"transferFlight\"\r\n            value=\"transferFlight\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"transferFlight\">- 1 пересадка</label><br />\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"directFlight\"\r\n            name=\"directFlight\"\r\n            value=\"directFlight\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"directFlight\">- без пересадок</label><br />\r\n        </fieldset>\r\n\r\n\r\n        <fieldset className=\"form__set form__price\" >\r\n          <h3 className=\"form__subtitle\">Цена</h3>\r\n          <label className=\"form__label\" htmlFor=\"from\">От</label>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            id=\"from\"\r\n            name=\"priceFrom\"\r\n            placeholder=\"введите сумму от ...\"\r\n            onChange={handleChangeForm}\r\n            value={inputPriceFrom}\r\n            title=\"поле может содержать только цифры\"\r\n          />\r\n          <br />\r\n          <label className=\"form__label\" htmlFor=\"before\">До</label>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            id=\"before\"\r\n            name=\"priceBefore\"\r\n            placeholder=\"введите сумму до ...\"\r\n            onChange={handleChangeForm}\r\n            value={inputPriceBefore}\r\n            title=\"поле может содержать только цифры\"\r\n          />\r\n          <br />\r\n        </fieldset>\r\n\r\n        {\r\n          airlinesFoundList &&\r\n          <fieldset className=\"form__set form__airlines\" onChange={handleChangeAirlinesCheckbox}>\r\n            <h3 className=\"form__subtitle\">Авиакомпании</h3>\r\n            {\r\n              Object.keys(airlinesFoundList).map((airline) =>\r\n                <div className=\"form__input-container\" key={airline} >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={airline}\r\n                    name={airline}\r\n                    value={airline}\r\n                    disabled={airlinesActiveList.includes(airline)}\r\n                  />\r\n                  <label className=\"form__label\" htmlFor={airline}>{airline}</label>\r\n                  <span className=\"form__min-price-span\">от {airlinesFoundList[airline]} р.</span><br />\r\n                </div>\r\n              )\r\n            }\r\n          </fieldset>\r\n        }\r\n\r\n      </form>\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default SearchArea\r\n","export default __webpack_public_path__ + \"static/media/logo.e01f0b9e.svg\";","export const config = {\r\n    costAdultPassenger: 'Стоимость для одного взрослого пассажира',\r\n}","import React from 'react'\r\nimport './Card.css'\r\nimport logo from '../../images/logo.svg'\r\nimport { config } from '../../utils/conf'\r\nimport { DateTime } from 'luxon'\r\n\r\n\r\nconst Card = React.memo(({ card }) => {\r\n\r\n  const segments = card.flight.legs[0].segments.length\r\n  const segmentsBack = card.flight.legs[1].segments.length\r\n\r\n  const airline = card.flight.carrier.caption\r\n  const airlineBack = card.flight.legs[1].segments[0].airline.caption\r\n\r\n  const departureDate = card.flight.legs[0].segments[0].departureDate\r\n  const arrivalDate = card.flight.legs[0].segments[segments - 1].arrivalDate\r\n  const departureDateBack = card.flight.legs[1].segments[0].departureDate\r\n  const arrivalDateBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalDate\r\n\r\n  const departureCity = card.flight.legs[0].segments[0].departureCity.caption\r\n  const departureCityBack =\r\n    card.flight.legs[1].segments[0].departureCity ?\r\n      card.flight.legs[1].segments[0].departureCity.caption\r\n      :\r\n      ''\r\n  const departureAirport = card.flight.legs[0].segments[0].departureAirport.caption\r\n  const departureAirportBack = card.flight.legs[1].segments[0].departureAirport.caption\r\n  const departureAirportId = card.flight.legs[0].segments[0].departureAirport.uid\r\n  const departureAirportIdBack = card.flight.legs[1].segments[0].departureAirport.uid\r\n\r\n  const arrivalCity =\r\n    card.flight.legs[0].segments[segments - 1].arrivalCity ?\r\n      card.flight.legs[0].segments[segments - 1].arrivalCity.caption\r\n      :\r\n      ''\r\n  const arrivalCityBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalCity.caption\r\n\r\n  const arrivalAirport = card.flight.legs[0].segments[segments - 1].arrivalAirport.caption\r\n  const arrivalAirportBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalAirport.caption\r\n  const arrivalAirportId = card.flight.legs[0].segments[segments - 1].arrivalAirport.uid\r\n  const arrivalAirportIdBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalAirport.uid\r\n\r\n  const [durationForvard, setDurationForvard] = React.useState('')\r\n  const [durationBack, setDurationBack] = React.useState('')\r\n\r\n  const [dateOfStart, setDateOfStart] = React.useState('')\r\n  const [dateOfFinish, setDateOfFinish] = React.useState('')\r\n  const [dateOfStartBack, setDateOfStartBack] = React.useState('')\r\n  const [dateOfFinishBack, setDateOfFinishBack] = React.useState('')\r\n\r\n  const [timeOfStart, setTimeOfStart] = React.useState('')\r\n  const [timeOfFinish, setTimeOfFinish] = React.useState('')\r\n  const [timeOfStartBack, setTimeOfStartBack] = React.useState('')\r\n  const [timeOfFinishBack, setTimeOfFinishBack] = React.useState('')\r\n\r\n  // дата и время\r\n  React.useEffect(() => {\r\n    setDateOfStart((DateTime.fromISO(departureDate).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setDateOfFinish((DateTime.fromISO(arrivalDate).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setDateOfStartBack((DateTime.fromISO(departureDateBack).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setDateOfFinishBack((DateTime.fromISO(arrivalDateBack).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setTimeOfStart((DateTime.fromISO(departureDate).setLocale('ru').toFormat('T')))\r\n    setTimeOfFinish((DateTime.fromISO(arrivalDate).setLocale('ru').toFormat('T')))\r\n    setTimeOfStartBack((DateTime.fromISO(departureDateBack).setLocale('ru').toFormat('T')))\r\n    setTimeOfFinishBack((DateTime.fromISO(arrivalDateBack).setLocale('ru').toFormat('T')))\r\n  }, [arrivalDate, arrivalDateBack, departureDate, departureDateBack])\r\n\r\n\r\n  // продолжительность полета\r\n  React.useEffect(() => {\r\n    const getReadableDuration = (minutes) => {\r\n      const dur = Number(minutes)\r\n      const h = Math.floor(dur / 60)\r\n      const m = Math.floor(dur % 60)\r\n      return (`${h} ч ${m} мин`)\r\n    }\r\n    setDurationForvard(getReadableDuration(card.flight.legs[0].duration))\r\n    setDurationBack(getReadableDuration(card.flight.legs[1].duration))\r\n  }, [card])\r\n\r\n  const handleClickButtonOfCard = () => {\r\n    // логика обработки клика и запрос к API\r\n    console.log(card)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card__heading\">\r\n        <img className=\"card__logo\" src={logo} alt=\"логотип авиакомпании\" />\r\n        <p className=\"card__cost\">{card.flight.price.total.amount} &#8381;</p>\r\n        <p className=\"card__cost-info\">{config.costAdultPassenger}</p>\r\n      </div>\r\n\r\n      <ul className=\"card__list-info\">\r\n        <li className=\"card__list-item\">\r\n          <p className=\"card__list-flight\">\r\n            {departureCity + ', ' + departureAirport}\r\n            <span className=\"card__airport-id\">({departureAirportId}) &#10230;</span>\r\n            {arrivalCity ? (arrivalCity + ', ' + arrivalAirport) : arrivalAirport}\r\n            <span className=\"card__airport-id\">({arrivalAirportId})</span>\r\n          </p>\r\n          <div className=\"card__list-container\">\r\n            <p className=\"card__list-time\">{timeOfStart}</p>\r\n            <p className=\"card__list-date\">{dateOfStart}</p>\r\n            <p className=\"card__list-duration\">&#8986; {durationForvard}</p>\r\n            <p className=\"card__list-date\">{dateOfFinish}</p>\r\n            <p className=\"card__list-time\">{timeOfFinish}</p>\r\n          </div>\r\n          <div className=\"card__list-transfer-container\">\r\n            <hr className=\"card__list-border-line\"></hr>\r\n            {\r\n              segments > 1 &&\r\n              <p className=\"card__list-transfer\">\r\n                {\r\n                  segments === 2 ?\r\n                    `${segments - 1} пересадка`\r\n                    :\r\n                    `${segments - 1} пересадки`\r\n                }\r\n              </p>\r\n            }\r\n            <hr className=\"card__list-border-line\"></hr>\r\n          </div>\r\n          <p className=\"card__list-carrier\">Рейс выполняет: {airline}</p>\r\n        </li>\r\n\r\n        <li className=\"card__list-item\">\r\n          <p className=\"card__list-flight\">\r\n            {departureCityBack ? (departureCityBack + ', ' + departureAirportBack) : departureAirportBack}\r\n            <span className=\"card__airport-id\">({departureAirportIdBack}) &#10230;</span>\r\n            {arrivalCityBack + ', ' + arrivalAirportBack}\r\n            <span className=\"card__airport-id\">({arrivalAirportIdBack})</span>\r\n          </p>\r\n          <div className=\"card__list-container\">\r\n            <p className=\"card__list-time\">{timeOfStartBack}</p>\r\n            <p className=\"card__list-date\">{dateOfStartBack}</p>\r\n            <p className=\"card__list-duration\">&#8986; {durationBack}</p>\r\n            <p className=\"card__list-date\">{dateOfFinishBack}</p>\r\n            <p className=\"card__list-time\">{timeOfFinishBack}</p>\r\n          </div>\r\n          <div className=\"card__list-transfer-container\">\r\n            <hr className=\"card__list-border-line\"></hr>\r\n            {\r\n              segmentsBack > 1 &&\r\n              <p className=\"card__list-transfer\">\r\n                {\r\n                  segmentsBack === 2 ?\r\n                    `${segmentsBack - 1} пересадка`\r\n                    :\r\n                    `${segmentsBack - 1} пересадки`\r\n                }\r\n              </p>\r\n            }\r\n            <hr className=\"card__list-border-line\"></hr>\r\n          </div>\r\n          <p className=\"card__list-carrier\">Рейс выполняет: {airlineBack}</p>\r\n        </li>\r\n      </ul>\r\n\r\n      <button className=\"card__button\" onClick={handleClickButtonOfCard}>ВЫБРАТЬ</button>\r\n\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './CardsArea.css'\r\nimport Card from '../Card/Card'\r\n\r\nconst CardsArea = React.memo(({ listForRender, message, sort }) => {\r\n\r\n  const [cardToRender, setCardToRender] = React.useState([])\r\n  const [buttonVisible, setButtonVisible] = React.useState(true)\r\n  const [numbers, setNumbers] = React.useState(2)\r\n\r\n\r\n  // сортировка по цене и длительности перелета \r\n  React.useEffect(() => {\r\n    if (sort) {\r\n      switch (sort) {\r\n        case 'priceUp':\r\n          listForRender.sort((cardLeft, cardRight) => Number(cardLeft.flight.price.total.amount) - Number(cardRight.flight.price.total.amount))\r\n          break\r\n        case 'priceDown':\r\n          listForRender.sort((cardLeft, cardRight) => Number(cardRight.flight.price.total.amount) - Number(cardLeft.flight.price.total.amount))\r\n          break\r\n        case 'duration':\r\n          listForRender.sort((cardLeft, cardRight) => Number(cardLeft.flight.legs[0].duration) - Number(cardRight.flight.legs[0].duration))\r\n          break\r\n        default:\r\n          console.log('Блок поиска \"Сортировать\" не использовался')\r\n      }\r\n    }\r\n  }, [sort, listForRender])\r\n\r\n\r\n  React.useEffect(() => {\r\n    setButtonVisible(true)\r\n    setCardToRender(\r\n      listForRender.slice(0, numbers).map(card =>\r\n        <Card\r\n          key={card.flightToken}\r\n          card={card}\r\n        />\r\n      )\r\n    )\r\n    listForRender.length <= numbers && setButtonVisible(false)\r\n  }, [listForRender, numbers, sort])\r\n\r\n\r\n  const addCardsToScreen = () => {\r\n    setNumbers(numbers + 2)\r\n  }\r\n\r\n\r\n  return (\r\n    <section className=\"cards-area\">\r\n      {\r\n        message ?\r\n          <p className=\"cards-area__message\">{message}</p>\r\n          :\r\n          <div className=\"cards-area__flex\">{cardToRender}</div>\r\n      }\r\n      {\r\n        buttonVisible &&\r\n        !message &&\r\n        <button className=\"cards-area__button\" onClick={addCardsToScreen}>Показать ещё</button>\r\n      }\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default CardsArea\r\n","import React from 'react'\nimport './App.css'\nimport SearchArea from '../SearchArea/SearchArea'\nimport CardsArea from '../CardsArea/CardsArea'\nimport flightsList from '../../utils/flights.json'\n\n\nconst App = () => {\n\n  const mainList = flightsList\n  const [listForRender, setListForRender] = React.useState([])\n  const [message, setMessage] = React.useState('')\n\n  const [sort, setSort] = React.useState('')\n  const [transferFlight, setTransferFlight] = React.useState(false)\n  const [directFlight, setDirectFlight] = React.useState(false)\n  const [priceFrom, setPriceFrom] = React.useState()\n  const [priceBefore, setPriceBefore] = React.useState()\n\n  const [airlinesFoundList, setAirlinesFoundList] = React.useState({})\n  const [airlinesCheckedList, setAirlinesCheckedList] = React.useState([])\n  const [airlinesActiveList, setAirlinesActiveList] = React.useState([])\n  const [listForCheckboxHandle, setListForCheckboxHandle] = React.useState([])\n\n  console.log(JSON.stringify(flightsList.length))\n\n  // поиск\n  React.useEffect(() => {\n    let temporaryArray = []\n\n    // фильтр по цене (и установка начального списка для отрисовки <= нет условия)\n    temporaryArray = mainList.filter(card =>\n      priceFrom && priceBefore ?\n        card.flight.price.total.amount < Number(priceBefore) && card.flight.price.total.amount > Number(priceFrom)\n        :\n        priceFrom && !priceBefore ?\n          card.flight.price.total.amount > Number(priceFrom)\n          :\n          !priceFrom && priceBefore ?\n            card.flight.price.total.amount < Number(priceBefore)\n            :\n            card\n    )\n\n    // фильтр по сегментам (пересадки - есть/нет)\n    if (transferFlight || directFlight) {\n      temporaryArray = temporaryArray.filter(card =>\n        transferFlight && !directFlight ?\n          card.flight.legs[0].segments.length > 1\n          :\n          !transferFlight && directFlight ?\n            card.flight.legs[0].segments.length === 1\n            :\n            card\n      )\n    }\n\n    setListForCheckboxHandle(temporaryArray)\n\n    // фильтр по авиакомпаниям\n    if (airlinesCheckedList.length) {\n      temporaryArray = temporaryArray.filter(card =>\n        airlinesCheckedList.includes(card.flight.carrier.caption)\n      )\n    }\n\n    setListForRender(temporaryArray)\n  }, [mainList, priceBefore, priceFrom, transferFlight, directFlight, airlinesCheckedList])\n\n\n  // переключатель сообщения\n  React.useEffect(() => {\n    listForRender.length ?\n      setMessage('')\n      :\n      setMessage('Ничего не найдено')\n  }, [listForRender])\n\n\n  // получение списка а/к с ценами (отрис. в SearchArea)\n  React.useEffect(() => {\n    let temporaryObject = {}\n\n    // сортировка <= получить мин. цену в объект\n    mainList.sort((cardLeft, cardRight) =>\n      Number(cardRight.flight.price.total.amount) - Number(cardLeft.flight.price.total.amount)\n    ).map(card =>\n      temporaryObject = { ...temporaryObject, [card.flight.carrier.caption]: card.flight.price.total.amount }\n    )\n\n    // в объект \"а/к: цена\" (отсорт. по имени а/к - ключу объекта)\n    setAirlinesFoundList(Object.keys(temporaryObject).sort().reduce((obj, key) => {\n      obj[key] = temporaryObject[key]\n      return obj\n    }, {}))\n  }, [mainList])\n\n\n  // обработка disabled для чекбокса с а/к\n  React.useEffect(() => {\n    // все а/к в listForRender - в Set \n    let list = new Set(listForCheckboxHandle.map(card => card.flight.carrier.caption))\n    // \"разность\" с airlinesFoundList\n    let intersection = Object.keys(airlinesFoundList).filter(x => !list.has(x))\n    setAirlinesActiveList(intersection)\n  }, [airlinesFoundList, listForCheckboxHandle])\n\n\n  const handleSearchForm = (formValues, selectedAirlines) => {\n    if (Object.keys(formValues).length) {\n      formValues.sort && setSort(formValues.sort)\n      formValues.transferFlight === undefined ? setTransferFlight(false) : setTransferFlight(formValues.transferFlight)\n      formValues.directFlight === undefined ? setDirectFlight(false) : setDirectFlight(formValues.directFlight)\n      setPriceFrom(formValues.priceFrom)\n      setPriceBefore(formValues.priceBefore)\n    }\n    setAirlinesCheckedList(selectedAirlines)\n  }\n\n\n  return (\n    <div className=\"app\">\n      <SearchArea\n        handleSearchForm={handleSearchForm}\n        airlinesFoundList={airlinesFoundList}\n        airlinesActiveList={airlinesActiveList}\n      />\n      <CardsArea\n        listForRender={listForRender}\n        message={message}\n        sort={sort}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}