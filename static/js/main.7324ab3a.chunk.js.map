{"version":3,"sources":["components/SearchArea/SearchArea.js","utils/logo.svg","utils/conf.js","components/Card/Card.js","components/CardsArea/CardsArea.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchArea","React","memo","handleSearchForm","airlinesList","useState","values","setValues","airlinesArr","setAirlinesArr","inputPriceFrom","setInputPriceFrom","inputPriceBefore","setInputPriceBefore","checkboxTransfer","setCheckboxTransfer","checkboxDirect","setCheckboxDirect","useEffect","length","handleChangeForm","e","name","target","value","showInputValue","className","onChange","type","id","htmlFor","placeholder","title","concat","Object","getOwnPropertyNames","map","airline","config","Card","card","segments","flight","legs","segmentsBack","carrier","caption","airlineBack","departureDate","arrivalDate","departureDateBack","arrivalDateBack","departureCity","departureCityBack","departureAirport","departureAirportBack","departureAirportId","uid","departureAirportIdBack","arrivalCity","arrivalCityBack","arrivalAirport","arrivalAirportBack","arrivalAirportId","arrivalAirportIdBack","durationForvard","setDurationForvard","durationBack","setDurationBack","dateOfStart","setDateOfStart","dateOfFinish","setDateOfFinish","dateOfStartBack","setDateOfStartBack","dateOfFinishBack","setDateOfFinishBack","timeOfStart","setTimeOfStart","timeOfFinish","setTimeOfFinish","timeOfStartBack","setTimeOfStartBack","timeOfFinishBack","setTimeOfFinishBack","DateTime","fromISO","setLocale","toFormat","getReadableDuration","minutes","dur","Number","h","Math","floor","m","duration","src","logo","alt","price","total","amount","onClick","console","log","CardsArea","listForRender","message","formData","cardToRender","setCardToRender","buttonVisible","setButtonVisible","numbers","setNumbers","sort","cardLeft","cardRight","slice","flightToken","App","mainList","flightsList","result","flights","setListForRender","filteredList","setFilteredList","setFormData","setMessage","setAirlinesList","airlinesChecked","setAirlinesChecked","priceFrom","priceBefore","temporaryList","filter","hasTransfer","directFlight","temporaryObj","sortedList","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7324ab3a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SearchArea.css'\r\n\r\n\r\nconst SearchArea = React.memo(({ handleSearchForm, airlinesList }) => {\r\n\r\n  const [values, setValues] = React.useState({})\r\n  const [airlinesArr, setAirlinesArr] = React.useState([])\r\n  const [inputPriceFrom, setInputPriceFrom] = React.useState('')\r\n  const [inputPriceBefore, setInputPriceBefore] = React.useState('')\r\n  const [checkboxTransfer, setCheckboxTransfer] = React.useState(false)\r\n  const [checkboxDirect, setCheckboxDirect] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    handleSearchForm(values, airlinesArr)\r\n  }, [handleSearchForm, values, airlinesArr.length])\r\n\r\n  // console.log(airlinesList) // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\n\r\n  const handleChangeForm = ((e) => {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    if (name === 'hasTransfer') {\r\n      setValues({ ...values, [name]: !checkboxTransfer })\r\n      setCheckboxTransfer(!checkboxTransfer)\r\n    } else if (name === 'directFlight') {\r\n      setValues({ ...values, [name]: !checkboxDirect })\r\n      setCheckboxDirect(!checkboxDirect)\r\n    } else {\r\n      setValues({ ...values, [name]: value })\r\n    }\r\n  })\r\n\r\n\r\n  const showInputValue = (e) => {\r\n    e.target.name === 'priceFrom' ?\r\n      setInputPriceFrom(e.target.value)\r\n      :\r\n      setInputPriceBefore(e.target.value)\r\n  }\r\n\r\n\r\n  const handleChangeAirlinesCheckbox = (e) => {\r\n    setAirlinesArr(airlinesArr.concat(e.target.name))\r\n  }\r\n\r\n\r\n  return (\r\n    <section className=\"search-area\">\r\n      <form className=\"form\">\r\n\r\n        <fieldset className=\"form__set form__sort\" onChange={handleChangeForm}>\r\n          <h3 className=\"form__subtitle\">Сортировать</h3>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"priceUp\"\r\n            name=\"sort\"\r\n            value=\"priceUp\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"priceUp\">- по возрастанию цены</label><br />\r\n          <input\r\n            type=\"radio\"\r\n            id=\"priceDown\"\r\n            name=\"sort\"\r\n            value=\"priceDown\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"priceDown\">- по убыванию цены</label><br />\r\n          <input\r\n            type=\"radio\"\r\n            id=\"duration\"\r\n            name=\"sort\"\r\n            value=\"duration\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"duration\">- по времени в пути</label>\r\n        </fieldset>\r\n\r\n\r\n        <fieldset className=\"form__set form__filter\" onChange={handleChangeForm}>\r\n          <h3 className=\"form__subtitle\">Фильтровать</h3>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"hasTransfer\"\r\n            name=\"hasTransfer\"\r\n            value=\"hasTransfer\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"hasTransfer\">- 1 пересадка</label><br />\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"directFlight\"\r\n            name=\"directFlight\"\r\n            value=\"directFlight\"\r\n          />\r\n          <label className=\"form__label\" htmlFor=\"directFlight\">- без пересадок</label><br />\r\n        </fieldset>\r\n\r\n\r\n        <fieldset className=\"form__set form__price\" onChange={handleChangeForm}>\r\n          <h3 className=\"form__subtitle\">Цена</h3>\r\n          <label className=\"form__label\" htmlFor=\"from\">От</label>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            id=\"from\"\r\n            name=\"priceFrom\"\r\n            placeholder=\"введите сумму от ...\"\r\n            onChange={showInputValue}\r\n            value={inputPriceFrom}\r\n            title=\"поле может содержать только цифры\"\r\n          />\r\n          <br />\r\n          <label className=\"form__label\" htmlFor=\"before\">До</label>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            id=\"before\"\r\n            name=\"priceBefore\"\r\n            placeholder=\"введите сумму до ...\"\r\n            onChange={showInputValue}\r\n            value={inputPriceBefore}\r\n            title=\"поле может содержать только цифры\"\r\n          />\r\n          <br />\r\n        </fieldset>\r\n\r\n        {\r\n          airlinesList &&\r\n          <fieldset className=\"form__set form__airlines\" onChange={handleChangeAirlinesCheckbox}>\r\n            <h3 className=\"form__subtitle\">Авиакомпании</h3>\r\n            {\r\n              Object.getOwnPropertyNames(airlinesList).map((airline) =>\r\n                <div className=\"form__input-container\" key={airline}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={airline}\r\n                    name={airline}\r\n                    value={airline}\r\n                  />\r\n                  <label className=\"form__label\" htmlFor={airline}>{airline}</label>\r\n                  <span className=\"form__min-price-span\">от {airlinesList[airline]} р.</span><br />\r\n                </div>\r\n              )\r\n            }\r\n\r\n          </fieldset>\r\n        }\r\n\r\n      </form>\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default SearchArea\r\n","export default __webpack_public_path__ + \"static/media/logo.e01f0b9e.svg\";","export const config = {\r\n    costAdultPassenger: 'Стоимость для одного взрослого пассажира',\r\n}","import React from 'react'\r\nimport './Card.css'\r\nimport logo from '../../utils/logo.svg'\r\nimport { config } from '../../utils/conf'\r\nimport { DateTime } from \"luxon\"\r\n\r\n\r\nconst Card = React.memo(({ card }) => {\r\n\r\n  const segments = card.flight.legs[0].segments.length\r\n  const segmentsBack = card.flight.legs[1].segments.length\r\n\r\n  const airline = card.flight.carrier.caption\r\n  const airlineBack = card.flight.legs[1].segments[0].airline.caption\r\n\r\n  const departureDate = card.flight.legs[0].segments[0].departureDate\r\n  const arrivalDate = card.flight.legs[0].segments[segments - 1].arrivalDate\r\n  const departureDateBack = card.flight.legs[1].segments[0].departureDate\r\n  const arrivalDateBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalDate\r\n\r\n  const departureCity = card.flight.legs[0].segments[0].departureCity.caption\r\n  const departureCityBack =\r\n    card.flight.legs[1].segments[0].departureCity ?\r\n      card.flight.legs[1].segments[0].departureCity.caption\r\n      :\r\n      ''\r\n  const departureAirport = card.flight.legs[0].segments[0].departureAirport.caption\r\n  const departureAirportBack = card.flight.legs[1].segments[0].departureAirport.caption\r\n  const departureAirportId = card.flight.legs[0].segments[0].departureAirport.uid\r\n  const departureAirportIdBack = card.flight.legs[1].segments[0].departureAirport.uid\r\n\r\n  const arrivalCity =\r\n    card.flight.legs[0].segments[segments - 1].arrivalCity ?\r\n      card.flight.legs[0].segments[segments - 1].arrivalCity.caption\r\n      :\r\n      ''\r\n  const arrivalCityBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalCity.caption\r\n  const arrivalAirport = card.flight.legs[0].segments[segments - 1].arrivalAirport.caption\r\n  const arrivalAirportBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalAirport.caption\r\n  const arrivalAirportId = card.flight.legs[0].segments[segments - 1].arrivalAirport.uid\r\n  const arrivalAirportIdBack = card.flight.legs[1].segments[segmentsBack - 1].arrivalAirport.uid\r\n\r\n  const [durationForvard, setDurationForvard] = React.useState('')\r\n  const [durationBack, setDurationBack] = React.useState('')\r\n\r\n  const [dateOfStart, setDateOfStart] = React.useState('')\r\n  const [dateOfFinish, setDateOfFinish] = React.useState('')\r\n  const [dateOfStartBack, setDateOfStartBack] = React.useState('')\r\n  const [dateOfFinishBack, setDateOfFinishBack] = React.useState('')\r\n\r\n  const [timeOfStart, setTimeOfStart] = React.useState('')\r\n  const [timeOfFinish, setTimeOfFinish] = React.useState('')\r\n  const [timeOfStartBack, setTimeOfStartBack] = React.useState('')\r\n  const [timeOfFinishBack, setTimeOfFinishBack] = React.useState('')\r\n\r\n  // дата и время\r\n  React.useEffect(() => {\r\n    setDateOfStart((DateTime.fromISO(departureDate).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setDateOfFinish((DateTime.fromISO(arrivalDate).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setDateOfStartBack((DateTime.fromISO(departureDateBack).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setDateOfFinishBack((DateTime.fromISO(arrivalDateBack).setLocale('ru').toFormat('dd LLL ccc')))\r\n    setTimeOfStart((DateTime.fromISO(departureDate).setLocale('ru').toFormat('T')))\r\n    setTimeOfFinish((DateTime.fromISO(arrivalDate).setLocale('ru').toFormat('T')))\r\n    setTimeOfStartBack((DateTime.fromISO(departureDateBack).setLocale('ru').toFormat('T')))\r\n    setTimeOfFinishBack((DateTime.fromISO(arrivalDateBack).setLocale('ru').toFormat('T')))\r\n  }, [arrivalDate, arrivalDateBack, departureDate, departureDateBack])\r\n\r\n\r\n  // продолжительность полета\r\n  React.useEffect(() => {\r\n    const getReadableDuration = (minutes) => {\r\n      const dur = Number(minutes)\r\n      const h = Math.floor(dur / 60)\r\n      const m = Math.floor(dur % 60)\r\n      return (`${h} ч ${m} мин`)\r\n    }\r\n    setDurationForvard(getReadableDuration(card.flight.legs[0].duration))\r\n    setDurationBack(getReadableDuration(card.flight.legs[1].duration))\r\n  }, [card])\r\n\r\n  const handleClickButtonOfCard = () => {\r\n    // some handler and POST with cardData (query to API)\r\n    console.log(card)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card__heading\">\r\n        <img className=\"card__logo\" src={logo} alt=\"логотип авиакомпании\" />\r\n        <p className=\"card__cost\">{card.flight.price.total.amount} &#8381;</p>\r\n        <p className=\"card__cost-info\">{config.costAdultPassenger}</p>\r\n      </div>\r\n\r\n      <ul className=\"card__list-info\">\r\n        <li className=\"card__list-item\">\r\n          <p className=\"card__list-flight\">\r\n            {departureCity + ', ' + departureAirport}\r\n            <span className=\"card__airport-id\">({departureAirportId}) &#10230;</span>\r\n            {arrivalCity ? (arrivalCity + ', ' + arrivalAirport) : arrivalAirport}\r\n            <span className=\"card__airport-id\">({arrivalAirportId})</span>\r\n          </p>\r\n          <div className=\"card__list-container\">\r\n            <p className=\"card__list-time\">{timeOfStart}</p>\r\n            <p className=\"card__list-date\">{dateOfStart}</p>\r\n            <p className=\"card__list-duration\">&#8986; {durationForvard}</p>\r\n            <p className=\"card__list-date\">{dateOfFinish}</p>\r\n            <p className=\"card__list-time\">{timeOfFinish}</p>\r\n          </div>\r\n          <div className=\"card__list-transfer-container\">\r\n            <hr className=\"card__list-border-line\"></hr>\r\n            {\r\n              segments > 1 &&\r\n              <p className=\"card__list-transfer\">\r\n                {\r\n                  segments === 2 ?\r\n                    `${segments - 1} пересадка`\r\n                    :\r\n                    `${segments - 1} пересадки`\r\n                }\r\n              </p>\r\n            }\r\n            <hr className=\"card__list-border-line\"></hr>\r\n          </div>\r\n          <p className=\"card__list-carrier\">Рейс выполняет: {airline}</p>\r\n        </li>\r\n\r\n        <li className=\"card__list-item\">\r\n          <p className=\"card__list-flight\">\r\n            {departureCityBack ? (departureCityBack + ', ' + departureAirportBack) : departureAirportBack}\r\n            <span className=\"card__airport-id\">({departureAirportIdBack}) &#10230;</span>\r\n            {arrivalCityBack + ', ' + arrivalAirportBack}\r\n            <span className=\"card__airport-id\">({arrivalAirportIdBack})</span>\r\n          </p>\r\n          <div className=\"card__list-container\">\r\n            <p className=\"card__list-time\">{timeOfStartBack}</p>\r\n            <p className=\"card__list-date\">{dateOfStartBack}</p>\r\n            <p className=\"card__list-duration\">&#8986; {durationBack}</p>\r\n            <p className=\"card__list-date\">{dateOfFinishBack}</p>\r\n            <p className=\"card__list-time\">{timeOfFinishBack}</p>\r\n          </div>\r\n          <div className=\"card__list-transfer-container\">\r\n            <hr className=\"card__list-border-line\"></hr>\r\n            {\r\n              segmentsBack > 1 &&\r\n              <p className=\"card__list-transfer\">\r\n                {\r\n                  segmentsBack === 2 ?\r\n                    `${segmentsBack - 1} пересадка`\r\n                    :\r\n                    `${segmentsBack - 1} пересадки`\r\n                }\r\n              </p>\r\n            }\r\n            <hr className=\"card__list-border-line\"></hr>\r\n          </div>\r\n          <p className=\"card__list-carrier\">Рейс выполняет: {airlineBack}</p>\r\n        </li>\r\n      </ul>\r\n\r\n      <button className=\"card__button\" onClick={handleClickButtonOfCard}>ВЫБРАТЬ</button>\r\n\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './CardsArea.css'\r\nimport Card from '../Card/Card'\r\n\r\nconst CardsArea = React.memo(({ listForRender, message, formData }) => {\r\n\r\n  const [cardToRender, setCardToRender] = React.useState([])\r\n  const [buttonVisible, setButtonVisible] = React.useState(true)\r\n  const [numbers, setNumbers] = React.useState(2)\r\n\r\n\r\n  // сортировка по цене и длительности перелета \r\n  React.useEffect(() => {\r\n    if (formData.sort) {\r\n      switch (formData.sort) {\r\n        case \"priceUp\":\r\n          (listForRender.sort(function (cardLeft, cardRight) {\r\n            if (Number(cardLeft.flight.price.total.amount) > Number(cardRight.flight.price.total.amount)) {\r\n              return 1\r\n            }\r\n            if (Number(cardLeft.flight.price.total.amount) < Number(cardRight.flight.price.total.amount)) {\r\n              return -1\r\n            }\r\n            // cardLeft === cardRight\r\n            return 0\r\n          }))\r\n          break\r\n\r\n        case \"priceDown\":\r\n          (listForRender.sort(function (cardLeft, cardRight) {\r\n            if (Number(cardLeft.flight.price.total.amount) < Number(cardRight.flight.price.total.amount)) {\r\n              return 1\r\n            }\r\n            if (Number(cardLeft.flight.price.total.amount) > Number(cardRight.flight.price.total.amount)) {\r\n              return -1\r\n            }\r\n            return 0\r\n          }))\r\n          break\r\n\r\n        case \"duration\":\r\n          (listForRender.sort(function (cardLeft, cardRight) {\r\n            if (Number(cardLeft.flight.legs[0].duration) > Number(cardRight.flight.legs[0].duration)) {\r\n              return 1\r\n            }\r\n            if (Number(cardLeft.flight.legs[0].duration) < Number(cardRight.flight.legs[0].duration)) {\r\n              return -1\r\n            }\r\n            return 0\r\n          }))\r\n          break\r\n\r\n        default:\r\n          console.log('Блок поиска \"Сортировать\" не использовался')\r\n      }\r\n    }\r\n  }, [formData.sort, listForRender])\r\n\r\n\r\n  React.useEffect(() => {\r\n    setButtonVisible(true)\r\n    setCardToRender(\r\n      listForRender.slice(0, numbers).map(card =>\r\n        <Card\r\n          key={card.flightToken}\r\n          card={card}\r\n        />\r\n      )\r\n    )\r\n    listForRender.length <= numbers && setButtonVisible(false)\r\n  }, [listForRender, numbers, formData.sort])\r\n\r\n\r\n  const addCardsToScreen = () => {\r\n    setNumbers(numbers + 2)\r\n  }\r\n\r\n\r\n  return (\r\n    <section className=\"cards-area\">\r\n      {\r\n        message ?\r\n          <p className=\"cards-area__message\">{message}</p>\r\n          :\r\n          <div className='cards-area__flex'>{cardToRender}</div>\r\n      }\r\n      {\r\n        buttonVisible &&\r\n        !message &&\r\n        <button className='cards-area__button' onClick={addCardsToScreen}>Показать ещё</button>\r\n      }\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default CardsArea\r\n","import React from 'react'\nimport './App.css'\nimport SearchArea from '../SearchArea/SearchArea'\nimport CardsArea from '../CardsArea/CardsArea'\nimport flightsList from '../../utils/flights.json'\n\n\nconst App = () => {\n\n  const mainList = flightsList.result.flights\n  const [listForRender, setListForRender] = React.useState([])\n  const [filteredList, setFilteredList] = React.useState([])\n  const [formData, setFormData] = React.useState({})\n  const [message, setMessage] = React.useState('')\n  const [airlinesList, setAirlinesList] = React.useState({})\n  const [airlinesChecked, setAirlinesChecked] = React.useState([])\n\n\n\n  // фильтр по цене\n  React.useEffect(() => {\n    if (formData.priceFrom || formData.priceBefore) {\n      const temporaryList = mainList.filter(card =>\n        formData.priceFrom && formData.priceBefore ?\n          card.flight.price.total.amount < Number(formData.priceBefore) && card.flight.price.total.amount > Number(formData.priceFrom)\n          :\n          formData.priceFrom && !formData.priceBefore ?\n            card.flight.price.total.amount > Number(formData.priceFrom)\n            :\n            !formData.priceFrom && formData.priceBefore &&\n            card.flight.price.total.amount < Number(formData.priceBefore)\n      )\n      if (temporaryList.length) {\n        setListForRender(temporaryList)\n      } else {\n        setListForRender([])\n        setMessage(\"Ничего не найдено\")\n      }\n    }\n    else {\n      setListForRender(mainList)\n    }\n  }, [formData.priceBefore, formData.priceFrom, mainList])\n\n\n  // // фильтр по сегментам (<= пересадки - есть/нет)\n  React.useEffect(() => {\n    formData.hasTransfer && !formData.directFlight ?\n      setFilteredList(\n        listForRender.filter(card =>\n          card.flight.legs[0].segments.length > 1\n        )\n      )\n      :\n      !formData.hasTransfer && formData.directFlight ?\n        setFilteredList(\n          listForRender.filter(card =>\n            card.flight.legs[0].segments.length === 1\n          )\n        )\n        :\n        setFilteredList([])\n  }, [formData.hasTransfer, formData.directFlight, listForRender])\n\n\n  // фильтр по сегментам (<= пересадки - есть/нет)\n  // React.useEffect(() => {\n  //   formData.hasTransfer && !formData.directFlight ?\n  //     console.log('formData.hasTransfer')\n  //     :\n  //     !formData.hasTransfer && formData.directFlight ?\n  //       console.log('formData.directFlight')\n  //       :\n  //       console.log('[empty]')\n  // }, [formData.hasTransfer, formData.directFlight, listForRender])\n\n\n  // получение списка перевозчиков с ценами\n  React.useEffect(() => {\n    let temporaryObj = {}\n    let sortedList = []\n\n    filteredList.length ?\n      sortedList = filteredList.sort(function (cardLeft, cardRight) {\n        if (Number(cardLeft.flight.price.total.amount) < Number(cardRight.flight.price.total.amount)) {\n          return 1\n        } if (Number(cardLeft.flight.price.total.amount) > Number(cardRight.flight.price.total.amount)) {\n          return -1\n        }\n        return 0\n      })\n      :\n      sortedList = listForRender.sort(function (cardLeft, cardRight) {\n        if (Number(cardLeft.flight.price.total.amount) < Number(cardRight.flight.price.total.amount)) {\n          return 1\n        } if (Number(cardLeft.flight.price.total.amount) > Number(cardRight.flight.price.total.amount)) {\n          return -1\n        }\n        return 0\n      })\n\n    if (sortedList.length) {\n      sortedList.map(card =>\n        temporaryObj = { ...temporaryObj, [card.flight.carrier.caption]: card.flight.price.total.amount }\n      )\n      setAirlinesList(temporaryObj)\n    } else {\n      setAirlinesList({})\n    }\n  }, [filteredList, listForRender])\n\n\n  // console.log(airlinesList)\n\n\n  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  // React.useEffect(() => {\n  //   airlinesList.length ?\n  //     setUniqueAirlinesList([...new Set(airlinesList)])\n  //     :\n  //     setUniqueAirlinesList([])\n  // }, [airlinesList])\n\n\n  const handleSearchForm = (values, airlinesArr) => {\n    setMessage('')\n    if (Object.keys(values).length) {\n      setFormData(values)\n      setAirlinesChecked(airlinesArr)\n    }\n  }\n\n\n  console.log(airlinesChecked)\n  console.log(formData) // <<<<<<<<<<<<<<<<<<<<<<<<<<\n  // console.log(filteredList) // <<<<<<<<<<<<<<<<<<<<<<<<\n  // console.log(airlinesList) // <<<<<<<<<<<<<<<<<<<<<<<\n\n\n  return (\n    <div className=\"app\">\n      <SearchArea\n        handleSearchForm={handleSearchForm}\n        airlinesList={airlinesList}\n      />\n      {\n        <CardsArea\n          listForRender={\n            filteredList.length ?\n              filteredList\n              :\n              listForRender\n          }\n          message={message}\n          formData={formData}\n        />\n      }\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}